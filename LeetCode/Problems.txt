 Find the Index of the First Occurrence in a String

============
def strStr(haystack: str, needle: str) -> int:
    len_h, len_n = len(haystack), len(needle)
    
    if len_n == 0:
        return 0

    for i in range(len_h - len_n + 1):
        if haystack[i:i+len_n] == needle:
            return i
    return -1

=============


Move Zeroes
==============

algorith used: two pointers

The two-pointer technique is a common algorithmic approach, especially useful when dealing with arrays or lists. It involves using two pointers (variables that store indices or positions) to traverse the data structure. These pointers can move towards each other, move in the same direction, or have different speeds, allowing for efficient comparisons and manipulations of elements. 
================

def moveZeroes(nums):
    insert_pos = 0

    # Move non-zeroes to the front
    for i in range(len(nums)):
        if nums[i] != 0:
            nums[insert_pos] = nums[i]
            insert_pos += 1

    # Fill the rest with zeroes
    for i in range(insert_pos, len(nums)):
        nums[i] = 0
===================
